/**
 * Command flags used for communication with Spectoda devices.
 * For more detailed information about command flags and their usage,
 * see Spectoda_Firmware components/spectoda-library/src/encoding.h
 *
 * This file will be removed in the future as TNGL parsing is being moved to C++ in WASM
 *
 * @see https://github.com/spectoda/Spectoda_Firmware/blob/main/components/spectoda-library/src/encoding.h
 */

export const COMMAND_FLAGS = Object.freeze({
  UNSUPPORTED_COMMND_RESPONSE: 255,

  OTA_BEGIN: 255,
  OTA_WRITE: 0,
  OTA_END: 254,
  OTA_RESET: 253,

  DEVICE_REBOOT_REQUEST: 5,
  DEVICE_DISCONNECT_REQUEST: 6,

  CONFIG_UPDATE_REQUEST: 10,
  CONFIG_UPDATE_RESPONSE: 11,

  // Former CommandFlag begin

  PEER_CONNECTED: 101,
  PEER_DISCONNECTED: 102,

  LOAD_TNGL: 104,
  TIMELINE_WRITE: 105,

  EMIT_NULL_EVENT: 117,
  EMIT_BOOLEAN_EVENT: 118,
  EMIT_VALUE_ADDRESS_EVENT: 119,
  EMIT_PIXELS_EVENT: 120,
  EMIT_COLOR_EVENT: 121,
  EMIT_DATE_EVENT: 122,
  EMIT_PERCENTAGE_EVENT: 123,
  EMIT_TIMESTAMP_EVENT: 124,
  EMIT_LABEL_EVENT: 125,
  EMIT_NUMBER_EVENT: 126,

  // Former CommandFlag end

  // 0.12.4
  WRITE_IO_MAPPING_REQUEST: 170,
  WRITE_IO_MAPPING_RESPONSE: 171,
  READ_IO_MAPPING_REQUEST: 172,
  READ_IO_MAPPING_RESPONSE: 173,
  WRITE_IO_VARIANT_REQUEST: 174,
  WRITE_IO_VARIANT_RESPONSE: 175,
  READ_IO_VARIANT_REQUEST: 176,
  READ_IO_VARIANT_RESPONSE: 177,
  READ_CONTROLLER_INFO_REQUEST: 178,
  READ_CONTROLLER_INFO_RESPONSE: 179,

  // 0.12.1
  READ_TNGL_BYTECODE_REQUEST: 180,
  READ_TNGL_BYTECODE_RESPONSE: 181,
  ERASE_TNGL_BYTECODE_REQUEST: 182,
  ERASE_TNGL_BYTECODE_RESPONSE: 183,

  // 0.10.4
  ERASE_TNGL_MEMORY_BANK_REQUEST: 184,
  ERASE_TNGL_MEMORY_BANK_RESPONSE: 185,
  SAVE_TNGL_MEMORY_BANK_REQUEST: 186,
  SAVE_TNGL_MEMORY_BANK_RESPONSE: 187,
  LOAD_TNGL_MEMORY_BANK_REQUEST: 188,
  LOAD_TNGL_MEMORY_BANK_RESPONSE: 189,

  READ_PORT_PIXELS_REQUEST: 190,
  READ_PORT_PIXELS_RESPONSE: 191,
  WRITE_PORT_PIXELS_REQUEST: 192,
  WRITE_PORT_PIXELS_RESPONSE: 193,
  EVALUATE_ON_CONTROLLER_REQUEST: 194,
  EVALUATE_ON_CONTROLLER_RESPONSE: 195,

  READ_CONTROLLER_CODES_REQUEST: 196,
  READ_CONTROLLER_CODES_RESPONSE: 197,
  WRITE_CONTROLLER_CODES_REQUEST: 198,
  WRITE_CONTROLLER_CODES_RESPONSE: 199,
  READ_OWNER_SIGNATURE_REQUEST: 200,
  READ_OWNER_SIGNATURE_RESPONSE: 201,

  WRITE_CONTROLLER_NAME_REQUEST: 202,
  WRITE_CONTROLLER_NAME_RESPONSE: 203,
  READ_CONTROLLER_NAME_REQUEST: 204,
  READ_CONTROLLER_NAME_RESPONSE: 205,

  MERGE_EVENT_HISTORY_REQUEST: 206,
  MERGE_EVENT_HISTORY_RESPONSE: 207,
  ERASE_EVENT_HISTORY_REQUEST: 208,
  ERASE_EVENT_HISTORY_RESPONSE: 209,

  REQUEST_PEER_REQUEST: 210,
  REQUEST_PEER_RESPONSE: 211,

  EVENT_HISTORY_BC_REQUEST: 212,
  EVENT_HISTORY_BC_RESPONSE: 213,

  VISIBLE_PEERS_REQUEST: 214,
  VISIBLE_PEERS_RESPONSE: 215,

  FW_UPDATE_PEER_REQUEST: 216,
  FW_UPDATE_PEER_RESPONSE: 217,

  SYNC_STATE_REQUEST: 218,
  SYNC_STATE_RESPONSE: 219,

  SAVE_STATE_REQUEST: 220,
  SAVE_STATE_RESPONSE: 221,

  SLEEP_REQUEST: 222,
  SLEEP_RESPONSE: 223,
  CONNECTED_PEERS_INFO_REQUEST: 224,
  CONNECTED_PEERS_INFO_RESPONSE: 225,

  DEVICE_CONFIG_REQUEST: 226,
  DEVICE_CONFIG_RESPONSE: 227,
  ROM_PHY_VDD33_REQUEST: 228,
  ROM_PHY_VDD33_RESPONSE: 229,
  VOLTAGE_ON_PIN_REQUEST: 230,
  VOLTAGE_ON_PIN_RESPONSE: 231,

  CHANGE_DATARATE_REQUEST: 232,
  CHANGE_DATARATE_RESPONSE: 233,

  FW_VERSION_REQUEST: 234,
  FW_VERSION_RESPONSE: 235,
  ERASE_NETWORK_REQUEST: 236,
  ERASE_OWNER_RESPONSE: 237,

  TNGL_FINGERPRINT_REQUEST: 242,
  TNGL_FINGERPRINT_RESPONSE: 243,
  TIMELINE_REQUEST: 244,
  TIMELINE_RESPONSE: 245,

  CONNECT_REQUEST: 238,
  CONNECT_RESPONSE: 239,
  ADOPT_REQUEST: 240,
  ADOPT_RESPONSE: 241,
} as const)
